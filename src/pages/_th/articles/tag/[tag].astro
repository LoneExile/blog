---
import TagsPage from "@pages/articles/tag/[tag].astro";
import props from "../../_props.json";
import { getCollection } from "astro:content";
import { type AnyCollectionEntry, collections } from "@utils/load-data.ts";

export async function getStaticPaths() {
  const language = props.language;
  let posts: AnyCollectionEntry[] = [];
  type MyCollectionKeys = keyof typeof collections;

  for (const collection of Object.keys(collections) as MyCollectionKeys[]) {
    let collectionEntries = await getCollection(collection);
    collectionEntries = collectionEntries.filter(
      (post) =>
        post.data.language === language &&
        (post.data.show === true || post.data.show === undefined),
    );
    posts = posts.concat(collectionEntries);
  }
  let tags: string[] = [];

  posts.forEach((post) => {
    if (post.data.tags) {
      tags = [...tags, ...post.data.tags];
    }
  });

  return tags.map((tag) => ({
    params: { tag: tag.toLowerCase() },
    props: { posts, language },
  }));
}
let { posts, language } = Astro.props;
---

<TagsPage {posts} {language} />

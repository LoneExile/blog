---
import ArticlePage from "@pages/articles/[slug].astro";
import props from "../_props.json";
import { type AnyCollectionEntry } from "@utils/load-data.ts";
import { getCollection } from "astro:content";
import { collections } from "../../../content/config.ts";

export async function getStaticPaths() {
  const language = props.language;
  let posts: AnyCollectionEntry[] = [];
  type MyCollectionKeys = keyof typeof collections;

  for (const collection of Object.keys(collections) as MyCollectionKeys[]) {
    let collectionEntries = await getCollection(collection);
    collectionEntries = collectionEntries.filter(
      (post) =>
        post.data.language === language &&
        (post.data.show === true || post.data.show === undefined),
    );

    posts = posts.concat(collectionEntries);
  }

  return posts.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
const language = props.language;

interface Props {
  entry: AnyCollectionEntry;
}
let { entry } = Astro.props;
---

<ArticlePage entry={entry} language={language} />

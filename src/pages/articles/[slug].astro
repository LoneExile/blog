---
import MainLayout from "@layouts/MainLayout.astro";
import Post from "@components/Post.astro";
import NewSletter from "@components/NewSletter.astro";
import RelateArticles from "@components/RelateArticles.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import { type CollectionEntry, getCollection } from "astro:content";
import { Comments } from "@components/Comment";

interface Props {
  entry: CollectionEntry<"blogs">;
}
const { entry } = Astro.props;
const { Content } = await entry.render();
const language = "en";
const currentPath = getRelativeLocaleUrl(language, "articles/" + entry.slug);
const title = entry.data.title;

if (entry === undefined) {
  return Astro.redirect(getRelativeLocaleUrl(language, "404/"));
}

export async function getStaticPaths() {
  const blogEntries = await getCollection("blogs", ({ data }) => {
    if (import.meta.env.PROD) {
      return data.draft !== true;
    } else {
      return true;
    }
  });

  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const currentTags = entry.data.tags;
---

<MainLayout
  description={entry.data.description}
  {currentPath}
  {language}
  {title}
>
  <Post
    title={entry.data.title}
    created={entry.data.created}
    updated={entry.data.updated}
    draft={entry.data.draft}
    tags={entry.data.tags}
    description={entry.data.description}
    url={entry.slug}
    {language}
    comments={entry.data.comments}
  >
    <Content />
  </Post>

  {
    (entry.data.comments === undefined || entry.data.comments === true) && (
      <Comments client:visible={{ rootMargin: "200px" }} />
    )
  }
  <RelateArticles {currentTags} {language} />
  <NewSletter {language} />
</MainLayout>

---
import MainLayout from "@layouts/MainLayout.astro";
import Post from "@components/Post.astro";
import NewSletter from "@components/NewSletter.astro";
import RelateArticles from "@components/RelateArticles.astro";
import { Comments } from "@components/Comment";
import { type AnyCollectionEntry } from "@utils/load-data.ts";
import { collections } from "../../content/config.ts";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  let language = "en";
  let posts: AnyCollectionEntry[] = [];
  type MyCollectionKeys = keyof typeof collections;

  for (const collection of Object.keys(collections) as MyCollectionKeys[]) {
    let collectionEntries = await getCollection(collection);
    collectionEntries = collectionEntries.filter(
      (post) =>
        post.data.language === language &&
        (post.data.show === true || post.data.show === undefined),
    );
    posts = posts.concat(collectionEntries);
  }

  return posts.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry, language },
  }));
}

let { entry, language } = Astro.props;
if (!language) {
  language = "en";
}

const { Content } = await entry.render();
const currentPath = "articles/" + entry.slug;
const title = entry.data.title;

if (entry === undefined) {
  return Astro.redirect(getRelativeLocaleUrl(language, "404/"));
}

const currentTags = entry.data.tags;
const isArticle =
  entry.data.comments === undefined || entry.data.comments === true;
---

<MainLayout
  description={entry.data.description}
  {currentPath}
  {language}
  {title}
>
  <Post
    title={entry.data.title}
    created={entry.data.created}
    updated={entry.data.updated}
    draft={entry.data.draft}
    tags={entry.data.tags}
    description={entry.data.description}
    url={entry.slug}
    {language}
    comments={entry.data.comments}
  >
    <Content />
  </Post>

  {
    isArticle && (
      <>
        <Comments client:visible={{ rootMargin: "400px" }} />
        <RelateArticles {currentTags} {language} currentSlug={entry.slug} />
        <NewSletter {language} />
      </>
    )
  }
</MainLayout>

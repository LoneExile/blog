---
import MainLayout from "@layouts/MainLayout.astro";
import BlogCard from "@components/BlogCard.astro";
import Pagination from "@components/Pagination.astro";
import { loadData } from "@utils/load-data.ts";
import { loadCollection, type AnyCollectionEntry } from "@utils/load-data.ts";

interface Props {
  language: string;
}
let { language } = Astro.props;
let data: SiteData = await loadData(language);
if (!language) {
  language = data.language;
}

const currentPath = "articles";
let posts = await loadCollection(language);
posts = posts.filter((post) => post.data.show || post.data.show === undefined);
const title = data.articles.title;
const siteDescription = data.articles.description;

const currentPage: number | null = +Astro.url.searchParams.get("page")! || 1;
const totalPages: number = Math.ceil(posts.length / 4);
const totalPosts: number = posts.length;
const articlesForPage: AnyCollectionEntry[] = posts.slice(
  (currentPage - 1) * 4,
  currentPage * 4,
);
---

<MainLayout
  {data}
  description={siteDescription}
  {currentPath}
  {language}
  {title}
>
  <div class="flex flex-col justify-between">
    <BlogCard {data} posts={articlesForPage} {language} />
    <Pagination
      currentPage={currentPage}
      totalPosts={totalPosts}
      disablePrevious={currentPage === 1}
      disableNext={currentPage === totalPages}
      language={language}
      path={"articles"}
    />
  </div>
</MainLayout>

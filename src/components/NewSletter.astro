---
import { getRelativeLocaleUrl } from "astro:i18n";
import Email from "@icons/email.astro";
import Modal from "@components/Modal.astro";
import Captcha from "@components/Captcha.tsx";

interface Props {
  language: string;
}
const { language } = Astro.props;
---

<section class="bg-white dark:bg-gray-900">
  <div class="py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-6">
    <div class="mx-auto max-w-screen-md sm:text-center">
      <p
        class="mx-auto mb-8 max-w-2xl text-gray-500 md:mb-12 sm:text-xl dark:text-gray-400"
      >
        Subscribe to our newsletter and stay up to date!
      </p>

      <form action="#" id="subscription-form">
        <div
          class="items-center mx-auto mb-3 space-y-4 max-w-screen-sm sm:flex sm:space-y-0"
        >
          <div class="relative w-full">
            <label
              for="email"
              class="hidden mb-2 text-sm font-medium text-gray-900 dark:text-gray-300"
              >Email address</label
            >
            <div
              class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none"
            >
              <Email
                color="fill-current"
                size="w-4 h-4 text-gray-500 dark:text-gray-400"
              />
            </div>
            <input
              class="block p-3 pl-9 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 sm:rounded-none sm:rounded-l-lg focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
              placeholder="Enter your email"
              type="email"
              id="email"
              name="email"
              required=""
            />
          </div>
          <div>
            <button
              id="subscribe"
              type="submit"
              class="py-3 px-5 w-full text-sm font-medium text-center text-white rounded-lg border cursor-pointer bg-primary-700 border-primary-600 sm:rounded-none sm:rounded-r-lg hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800 hidden"
              >Subscribe</button
            >
            <button
              id="subscribe-disabled"
              type="button"
              class="py-3 px-5 w-full text-sm font-medium text-center text-white rounded-lg border bg-primary-700 border-primary-600 sm:rounded-none sm:rounded-r-lg focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:focus:ring-primary-800 cursor-not-allowed"
              disabled>Subscribe</button
            >
            <button
              id="subscribe-wait"
              type="button"
              disabled
              class="py-3 px-5 w-full text-sm font-medium text-center text-white rounded-lg border bg-primary-700 border-primary-600 sm:rounded-none sm:rounded-r-lg focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:focus:ring-primary-800 cursor-wait hidden"
              disabled
            >
              Verifying...
            </button>
          </div>
        </div>
      </form>
      <div
        class="mx-auto max-w-screen-sm text-sm text-left text-gray-500 newsletter-form-footer dark:text-gray-300"
      >
        We care about the protection of your data. <a
          href={getRelativeLocaleUrl(language, "articles/privacy-policy/")}
          class="font-medium text-primary-600 dark:text-primary-500 hover:underline"
          >Read our Privacy Policy</a
        >.
      </div>
      <!-- TODO: remove this after submit -->
      <!-- TODO: change theme -->
      <div id="cf-turnstile-ele">
        <!-- <Modal /> -->
        <Captcha client:click="#email" />
        <div
          class="cf-turnstile flex justify-center mt-4"
          data-sitekey={import.meta.env.PUBLIC_TURNSTILE_KEY}
          data-size="normal"
        >
        </div>
      </div>
    </div>
  </div>
</section>

<!-- <script> -->
<!--   document.addEventListener("DOMContentLoaded", function () { -->
<!--     const turnstileContainer = document.querySelector( -->
<!--       ".cf-turnstile", -->
<!--     ) as HTMLElement; -->
<!--     function adjustTurnstileSize() { -->
<!--       if (window.innerWidth < 600) { -->
<!--         turnstileContainer.setAttribute("data-size", "compact"); -->
<!--       } else { -->
<!--         turnstileContainer.setAttribute("data-size", "normal"); -->
<!--       } -->
<!--     } -->
<!--     adjustTurnstileSize(); -->
<!--     window.addEventListener("resize", adjustTurnstileSize); -->
<!--   }); -->
<!-- </script> -->

<!-- <script> -->
<!--   document.addEventListener("DOMContentLoaded", function () { -->
<!--     const subscribeButton = document.getElementById("subscribe"); -->
<!--     const subscribeDisabledButton = -->
<!--       document.getElementById("subscribe-disabled"); -->
<!--     function toggleSubscribeButton() { -->
<!--       const selectTurnstileToken = document.querySelector( -->
<!--         'input[name="cf-turnstile-response"]', -->
<!--       ); -->
<!--       const turnstileToken = (selectTurnstileToken as HTMLInputElement).value; -->
<!--       if (turnstileToken && turnstileToken.trim() !== "") { -->
<!--         (subscribeButton as HTMLElement).classList.remove("hidden"); -->
<!--         (subscribeDisabledButton as HTMLElement).classList.add("hidden"); -->
<!--       } else { -->
<!--         (subscribeButton as HTMLElement).classList.add("hidden"); -->
<!--         (subscribeDisabledButton as HTMLElement).classList.remove("hidden"); -->
<!--       } -->
<!--     } -->
<!--     const targetNode = document.getElementById( -->
<!--       "cf-turnstile-ele", -->
<!--     ) as HTMLElement; -->
<!--     const config = { attributes: true, childList: true, subtree: true }; -->
<!--     const callback = (mutationList: any, _: any) => { -->
<!--       for (const mutation of mutationList) { -->
<!--         if (mutation.type === "attributes") { -->
<!--           if (mutation.attributeName === "value") { -->
<!--             toggleSubscribeButton(); -->
<!--           } -->
<!--         } -->
<!--       } -->
<!--     }; -->
<!--     const observer = new MutationObserver(callback); -->
<!--     observer.observe(targetNode, config); -->
<!--   }); -->
<!-- </script> -->

<!-- <script> -->
<!--   document -->
<!--     .getElementById("subscription-form") -->
<!--     ?.addEventListener("submit", function (event) { -->
<!--       event.preventDefault(); -->

<!--       const selectEmail = document?.querySelector( -->
<!--         'input[name="email"]', -->
<!--       ) as HTMLInputElement; -->
<!--       const email = selectEmail?.value; -->
<!--       const selectTurnstileToken = document.querySelector( -->
<!--         'input[name="cf-turnstile-response"]', -->
<!--       ) as HTMLInputElement; -->
<!--       const turnstileToken = selectTurnstileToken?.value; -->

<!--       fetch(import.meta.env.PUBLIC_TURNSTILE_HANDLE_API, { -->
<!--         method: "POST", -->
<!--         headers: { -->
<!--           "Content-Type": "application/json", -->
<!--         }, -->
<!--         body: JSON.stringify({ -->
<!--           email: email, -->
<!--           captchaToken: turnstileToken, -->
<!--         }), -->
<!--       }) -->
<!--         .then((response) => { -->
<!--           if (!response.ok) { -->
<!--             throw new Error(`HTTP error! status: ${response.status}`); -->
<!--           } -->
<!--           return response.json(); -->
<!--         }) -->
<!--         .catch((error) => { -->
<!--           console.error("Error:", error.message); -->
<!--         }); -->
<!--     }); -->
<!-- </script> -->

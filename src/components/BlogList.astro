---
import Base from "@layouts/Base.astro";
import type { BlogPostFrontmatter } from "@types";
import type { MarkdownInstance } from "astro";
import { formattedDate } from "@utils";

type Post = MarkdownInstance<BlogPostFrontmatter>;

interface Props {
  posts: Post[];
}

let { posts } = Astro.props as Props;

posts = posts.sort((a: Post, b: Post): number => {
  if (a.frontmatter.date > b.frontmatter.date) {
    return -1;
  } else if (a.frontmatter.date < b.frontmatter.date) {
    return 1;
  } else {
    return 0;
  }
});

if (import.meta.env.PROD) {
  posts = posts.filter((post: Post) => !post.frontmatter.draft);
}
---

<div>
  {
    posts.map((post) => (
      <div class="py-4 border-b first:border-t">
        {post.frontmatter.draft && (
          <span class="bg-red-700 text-white inline-block px-2">[Draft]</span>
        )}
        <a class="text-blue-700 hover:underline" href={post.url}>
          {post.frontmatter.title}
        </a>
        <p>{formattedDate(post.frontmatter.date)}</p>
      </div>
    ))
  }
</div>

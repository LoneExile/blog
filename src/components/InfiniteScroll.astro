---
import { getRelativeLocaleUrl } from "astro:i18n";
import { type AnyCollectionEntry } from "@utils/load-data.ts";

interface Props {
  posts: AnyCollectionEntry[];
  language: string;
}

let { posts, language } = Astro.props;

posts = posts.sort((a, b) => {
  if (a.data.created > b.data.created) {
    return -1;
  } else if (a.data.created < b.data.created) {
    return 1;
  } else {
    return 0;
  }
});

const loop = 50;
let display = posts.concat(...Array(loop).fill(posts));

const getPath = (slug: string) => {
  return getRelativeLocaleUrl(language, "articles/" + slug);
};

const style = (position: string, color: string) => {
  return `pointer-events-none absolute -${position}-1 z-10 h-20 w-full bg-gradient-to-b from-${color}-100 to-transparent`;
};
---

<!-- <div class="flex h-screen w-screen items-center justify-center"> -->
<div class="relative mx-auto mt-4 w-full max-w-screen-lg overflow-hidden">
  <div class="dark:hidden">
    <div class={style("top", "white")}></div>
    <div class={style("bottom", "white")}></div>
    <div class={style("left", "white")}></div>
    <div class={style("right", "white")}></div>
  </div>
  <div class="hidden dark:block">
    <div class={style("top", "gray-900")}></div>
    <div class={style("bottom", "gray-900")}></div>
    <div class={style("left", "gray-900")}></div>
    <div class={style("right", "gray-900")}></div>
  </div>

  <div
    class="mx-auto grid h-[300px] w-[300px] animate-skew-scroll grid-cols-1 gap-5 sm:w-[600px] sm:grid-cols-2 md:h-[400px]"
  >
    {
      display.map((post) => (
        <>
          <a
            href={getPath(post.slug)}
            aria-label={"Read more about " + post.data.title}
            class="flex cursor-pointer items-center space-x-2 rounded-md border border-gray-100 p-5 text-gray-600 shadow-md transition-all hover:-translate-y-1 hover:translate-x-1 hover:scale-[1.025] hover:underline hover:shadow-xl dark:text-white"
          >
            {post.data.title}
          </a>
        </>
      ))
    }
  </div>
</div>

---
import fs from "node:fs";
import Base from "./Base.astro";
import { formattedDate } from "@utils";
import type { BlogPostFrontmatter } from "@types";

import type { MarkdownLayoutProps } from "astro";
import { Image, Picture } from "@astrojs/image/components";

type Props = MarkdownLayoutProps<BlogPostFrontmatter>;
const { title, date, draft, tags } = Astro.props.frontmatter;
const { url } = Astro.props;

const slug = url?.split("/").pop();
const imageFormat = [
  "jpg",
  "jpeg",
  "png",
  "webp",
  "avif",
  "tiff",
  "tif",
  "gif",
  "svg",
];

const imagePath = (filename: string) => {
  if (import.meta.env.PROD) {
    return new URL(`./images/${filename}`, import.meta.url);
  } else {
    return new URL(`../../public/images/${filename}`, import.meta.url);
  }
};

const foundImageFormat = imageFormat.find((format) => {
  try {
    fs.accessSync(imagePath(`${slug}.${format}`));
    return true;
  } catch {
    return false;
  }
});
---

<Base title="Blog post">
  <div class="mb-8">
    {
      draft && (
        <span class="bg-red-700 text-white inline-block px-2 mb-4">
          [Draft]
        </span>
      )
    }

    {
      tags && (
        <div class="mb-4">
          {tags.map((tag) => (
            <a
              href={`/blogs/tag/${tag.toLowerCase()}`}
              class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2"
            >
              #{tag}
            </a>
          ))}
        </div>
      )
    }

    <h1 class="text-3xl mb-2">{title}</h1>
    <p>{formattedDate(date)}</p>
  </div>

  {
    foundImageFormat !== undefined && (
      <Picture
        src={`/images/${slug}.${foundImageFormat}`}
        class="mb-8"
        widths={[400, 600, 1024]}
        sizes="(max-width: 400px) 400px, (max-width: 600px) 600px, 1024px"
        aspectRatio={5 / 3}
        alt={title}
      />
    )
  }

  <div class="prose">
    <slot />
  </div>
</Base>
